{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/MainContainer/MainContainer.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/ContactItem/ContactItem.js","Components/Filter/Filter.js","Components/MainContainer/MainContainer.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","inputName","uuidv4","inputNumber","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","obj","id","props","addNewContact","reset","this","onSubmit","className","s","form","type","pattern","title","required","onChange","placeholder","disabled","Component","ContactList","children","list","ContactItem","onDeleteItem","map","onClick","Filter","find","MainContainer","container","App","filter","contacts","contact","includes","alert","prevState","deleteItem","itemId","item","changeFilter","target","getVisibleItems","normalizedFilter","toLowerCase","console","log","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleItem","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c953e1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__33Jh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__1vjUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContainer_container__3bOs4\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nclass ContactForm extends Component {\r\n  inputName = uuidv4();\r\n  inputNumber = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const obj = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addNewContact(obj);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, inputName, handleInputChange, inputNumber } = this;\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            id={inputName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Number</span>\r\n          <input\r\n            id={inputNumber}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"xxx-xx-xx\"\r\n            value={number}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name || !number}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ children }) => {\r\n  return <ul className={s.list}>{children}</ul>;\r\n};\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst ContactItem = ({ state, onDeleteItem }) => {\r\n  return (\r\n    <>\r\n      {state.map(({ name, number, id }) => (\r\n        <li key={uuidv4()}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => onDeleteItem(id)}>\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  state: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <div className={s.find}>\r\n        <p>Find contacts by name</p>\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './MainContainer.module.css';\r\nconst MainContainer = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\nexport default MainContainer;\r\n","import React, { Component } from 'react';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport ContactItem from './Components/ContactItem';\nimport Filter from './Components/Filter';\nimport MainContainer from './Components/MainContainer';\nexport default class App extends Component {\n  state = {\n    filter: '',\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  };\n  addNewContact = obj => {\n    const repeatingName = this.state.contacts\n      .map(contact => contact.name)\n      .includes(obj.name);\n    if (repeatingName) {\n      alert(`${obj.name} is already in contacts`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, obj],\n        };\n      });\n    }\n  };\n  deleteItem = itemId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== itemId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n  getVisibleItems = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(e =>\n      e.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  componentDidMount() {\n    console.log('App componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле Contacts');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleItem = this.getVisibleItems();\n    const { addNewContact, changeFilter, deleteItem } = this;\n    const { filter } = this.state;\n    return (\n      <MainContainer>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        {this.state.contacts.length !== 0 && (\n          <ContactList>\n            <ContactItem state={visibleItem} onDeleteItem={deleteItem} />\n          </ContactList>\n        )}\n      </MainContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Z9wY\"};"],"sourceRoot":""}